---
title: การดีพลอยขึ้นเว็บ
slug: deploying
date: 0002/01/02
number: 2.5
sidebar: true
contents: รู้วิธีดีพลอยไปที่ Meteor.com|รู้วิธีดีพลอยไปที่ Modulus|รู้วิธีดีพลอยขึ้นเซิร์ฟเวอร์ของคุณเองด้วย Meteor Up
paragraphs: 46
---

คนบางคนชอบที่จะทำงานเงียบๆ จนกว่าโครงการจะเสร็จสมบูรณ์ ในขณะที่คนอื่นๆ อดใจรอไม่ไหวที่จะแสดงให้โลกรับรู้ในทันทีที่ทำได้

ถ้าคุณเป็นคนจำพวกแรก และในตอนนี้ต้องการแค่สร้างแอพบนเครื่องตัวเอง ก็สามารถข้ามบทนี้ไปได้ แต่ถ้าคุณยอมเสียเวลาซักนิดเพื่อเรียนรู้วิธีการดีพลอยแอพ Meteor ของคุณให้ขึ้นไปทำงานบนเว็บ เราก็พร้อมจะสอนให้

โดยเราจะมาเรียนวิธีการดีพลอยแอพ Meteor หลายๆแบบ ซึ่งคุณสามารถนำแบบไหนไปใช้ก็ได้ในระหว่างที่คุณกำลังสร้างแอพ ไม่ว่าคุณกำลังสร้างแอพ Microscope หรือแอพ Meteor ตัวอื่นๆ ถ้าพร้อมแล้วก็มาเริ่มกันเลย!

<% note do %>

### รู้จักบทเสริมพิเศษกัน

บทเรียนนี้เป็น  **บทเสริมพิเศษ (sidebar)** ซึ่งเจาะลึกลงไปในเรื่องของ Meteor มากขึ้นและเนื้อหาก็แยกออกมาจากเรื่องอื่นในหนังสือ  

ดังนั้นถ้าคุณต้องการจะสร้างแอพ Microscope คุณก็สามารถข้ามบทนี้ไปก่อนได้ แล้วค่อยกลับมาอ่านอีกครั้ง

<% end %>

### ดีพลอยไปที่ Meteor

การดีพลอยไปที่โดเมนย่อยของ Meteor (เช่น `http://myapp.meteor.com`) เป็นทางเลือกที่ง่ายที่สุด และเป็นวิธีแรกที่เราจะลองกัน วิธีนี้ช่วยให้คุณสามารถโชว์แอพให้คนอื่นๆเห็นได้ตั้งแต่ตอนเริ่มทำ หรือใช้เพื่อทำเป็นเซิร์ฟเวอร์ทดสอบชั่วคราวก่อนนำไปใช้งานจริงก็ได้

ดีพลอยไปที่ Meteor นั้นง่ายมาก แค่เปิดเทอร์มินอล แล้วไปที่โฟลเดอร์แอพ Meteor ของคุณ จากนั้นก็พิมพ์ :

~~~bash
meteor deploy myapp.meteor.com
~~~

โดยคุณต้องเปลี่ยนชื่อ "myapp" ด้วยชื่อที่คุณเลือกไว้ และยังไม่มีใครเอาไปใช้

ถ้าคุณทำการดีพลอยเป็นครั้งแรก คุณจะถูกขอให้สร้างบัญชีผู้ใช้ที่ Meteor เมื่อคุณดำเนินการเสร็จ ไม่กี่วินาทีหลังจากนั้นคุณก็สามารถเรียกใช้แอพของคุณได้ที่ `http://myapp.meteor.com`

ทั้งนี้คุณสามารถใช้ [หน้าเอกสารหลักของ Meteor](http://docs.meteor.com/#deploying) เพื่อค้นหาข้อมูลเพิ่มเติม เช่น การเข้าถึงฐานข้อมูลที่แอพคุณกำลังใช้ หรือการใช้ชื่อโดเมนอื่นกับแอพของคุณ


### Deploying On Modulus

////

<% note do %>

### Demeteorizer

////

<% end %>

////

~~~bash
npm install -g modulus
~~~

////

~~~bash
modulus login
~~~

////

~~~bash
modulus project create
~~~

////

////

~~~bash
modulus env set MONGO_URL "mongodb://<user>:<pass>@mongo.onmodulus.net:27017/<database_name>"
~~~

////

~~~bash
modulus deploy
~~~

////

### Meteor Up

////

////

////

////

### Initializing Meteor Up

////

~~~bash
npm install -g mup
~~~

////

////

////

~~~bash
mkdir ~/microscope-deploy
cd ~/microscope-deploy
mup init
~~~

<% note do %>

### Sharing with Dropbox

////

<% end %>

### Meteor Up Configuration

////

////

////

~~~js
{
  //server authentication info
  "servers": [{
    "host": "hostname",
    "username": "root",
    "password": "password"
    //or pem file (ssh based authentication)
    //"pem": "~/.ssh/id_rsa"
  }],

  //install MongoDB in the server
  "setupMongo": true,

  //location of app (local directory)
  "app": "/path/to/the/app",

  //configure environmental
  "env": {
    "ROOT_URL": "http://supersite.com"
  }
}
~~~
<%= caption "mup.json" %>

////

**Server Authentication**

////

////

**MongoDB Configuration**

////

////

**Meteor App Path**

////

**Environment Variables**

////

### Setting Up and Deploying

////

~~~bash
mup setup
~~~

////

~~~bash
mup deploy
~~~

////

### Displaying Logs

////

~~~bash
mup logs -f
~~~

////

////

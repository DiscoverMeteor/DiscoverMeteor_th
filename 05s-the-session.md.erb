---
title: เซสชั่น
slug: the-session
date: 0005/01/02
number: 5.5
sidebar: true
contents: เรียนรู้เรื่องเซสชั่นของ Meteor|เรียนรู้วิธีใช้ฟังก์ชัน autorun|เรียนรู้การรีโหลดโค้ดอัตโนมัติ
paragraphs: 33
---

Meteor เป็นเฟรมเวอร์คแบบรีแอคทีฟ นั่นหมายความว่า เมื่อข้อมูลเปลี่ยนแปลง สิ่งต่างๆในแอพก็จะเปลี่ยนตามโดยที่คุณไม่ต้องทำอะไร

เราได้เห็นการทำงานแบบนี้กันแล้วกับเทมเพลตที่เปลี่ยนแปลงตามข้อมูลและเส้นทางที่เปลี่ยนไป

ในบทต่อไปเราจะเจาะลึกลงไปว่าการทำงานแบบนี้เกิดขึ้นได้อย่างไร แต่ก่อนอื่นเราอยากแนะนำให้รู้จักกับคุณสมบัติพิเศษพื้นฐานทีี่มีประโยชน์มากกับแอพแบบต่างๆ

### เซสชันของ Meteor

ในเวอร์ชันนี้แอพ Microscope ได้ข้อมูลสถานะปัจจุบันของผู้ใช้งานมาจากข้อความ URL ที่กำลังเปิดใช้งานอยู่ (รวมทั้งที่อยู่ในฐานข้อมูล)

แต่ยังมีอีกหลายกรณีที่คุณจำเป็นต้องเก็บสถานะบางอย่างที่เกี่ยวข้องกับผู้ใช้แอพคนปัจจุบันไว้ชั่วคราว (เช่น การซ่อนหรือแสดงข้อมูลบางอย่าง) การใช้เซสชันจึงเหมาะกับเรื่องนี้

เซสชัน เป็นที่เก็บข้อมูลชนิดรีแอคทีฟแบบทั่วถึง (global reactive data store) ความหมายคือ มันเป็นอ็อบเจกต์เดี่ยวๆแบบทั่วถึง มีอยู่ตัวเดียวแต่เรียกใช้งานได้จากทุกที่ ซึ่งตัวแปรแบบทั่วถึงนี้ มักถูกมองว่าไม่ควรเอามาใช้ แต่ในกรณีนี้เซสชันถูกนำมาใช้เป็นช่องทางสื่อสารกลาง เพื่อให้ส่วนต่างๆในแอปพลิเคชันติดต่อถึงกันได้

### การเปลี่ยนค่า Session

เซสชั่นสามารถเรียกใช้ได้จากทุกๆที่ในไคลเอนต์ด้วยอ็อบเจกต์  `Session`  โดยมีวิธีการตั้งค่าให้ session ดังนี้

~~~js
❯ Session.set('pageTitle', 'A different title');
~~~
<%= caption "Browser console" %>

คุณสามารถอ่านค่ากลับมาได้ด้วยคำสั่ง `Session.get('mySessionProperty');` และเนื่องจากมันเป็นข้อมูลชนิดรีแอคทีฟ ก็หมายความว่า ถ้าคุณใส่มันไว้ในตัวช่วยเทมเพลท คุณก็จะเห็นผลลัพธ์ที่ได้จากตัวช่วยนี้มีการเปลี่ยนแปลงตามค่าของตัวแปรเซสชันที่เปลี่ยนไป

ลองทำตามนี้ โดยเพิ่มโค้ดข้างล่างลงไปในเทมเพลตเลย์เอาท์

~~~html
<header class="navbar navbar-default" role="navigation">
	<div class="navbar-header">
		<a class="navbar-brand" href="{{pathFor 'postsList'}}">{{pageTitle}}</a>
	</div>
</header>
~~~
<%= caption "client/templates/application/layout.html"%>

~~~js
Template.layout.helpers({
  pageTitle: function() { return Session.get('pageTitle'); }
});
~~~
<%= caption "client/templates/application/layout.js"%>

<% note do %>

### หมายเหตุเกี่ยวกับโค้ดในบทแทรก

เนื่องจากโค้ดที่อยู่ในบทแทรกทั้งหมด ไม่ได้เป็นส่วนหนึ่งของแอพในหนังสือ ดังนั้นคุณอาจจะสร้าง branch ใหม่ (ถ้าใช้ Git) หรือแก้ไขโค้ดที่คุณเปลี่ยนไปกลับคืน เมื่อจบบทแทรกนี้

<% end %>

การรีโหลดโค้ดอัตโนมัติของ Meteor (hot code reload หรือ HCR) จะคงค่าเซสชันไว้ ดังนั้นคุณก็ควรจะเห็นข้อความ "A different title" แสดงในส่วน nav bar แต่ถ้าไม่เป็นแบบนั้น ให้คุณพิมพ์คำสั่ง `Session.set()` ข้างบนอีกครั้ง

ยิ่งไปกว่านั้น ถ้าเราเปลี่ยนค่ามันอีกครั้ง (ในคอนโซลของเบราว์เซอร์) เราก็ควรจะเห็นอีกข้อความเช่นกัน

~~~js
❯ Session.set('pageTitle', 'A brand new title');
~~~
<%= caption "Browser console" %>

เซสชัน เรียกใช้งานได้อย่างทั่วถึงในทุกที่ ดังนั้นจึงเปลี่ยนแปลงมันจากที่ไหนก็ได้ ข้อดีนี้ช่วยให้เราทำอะไรได้มากมาย แต่ก็อาจจะกลายเป็นกับดักได้ ถ้าเราใช้มากเกินไป

ยังมีเรื่องสำคัญที่ควรรู้ก็คือ เซสชันอ็อบเจกต์ *ไม่สามารถ* แบ่งปันข้อมูลระหว่างผู้ใช้ หรือระหว่างแท็บของเบราว์เซอร์ได้ นั่นคือเหตุผลว่า ถ้าตอนนี้คุณเปิดแอพในอีกแท็บนึง คุณจะพบหน้าที่มีแต่หัวเรื่องว่างๆเท่านั้น

<% note do %>

### การเปลี่ยนแปลงที่เหมือนเดิม

ถ้าคุณแก้ไขค่าของตัวแปรเซสชันด้วยคำสั่ง `Session.set()` แต่คุณใช้ค่าเหมือนเดิม Meteor ก็ฉลาดพอที่จะมองข้ามห่วงโซ่รีแอกทีฟนี้ และไม่เรียกใช้ฟังก์ชันโดยไม่จำเป็น

<% end %>

### Introducing Autorun

////

////

~~~js
helloWorld = function() {
  alert(Session.get('message'));
}
~~~

////

////

////

~~~js
❯ Tracker.autorun( function() { console.log('Value is: ' + Session.get('pageTitle')); } );
Value is: A brand new title
~~~
<%= caption "Browser console" %>

////

~~~js
❯ Session.set('pageTitle', 'Yet another value');
Value is: Yet another value
~~~
<%= caption "Browser console" %>

////

////

~~~js
Tracker.autorun(function() {
	alert(Session.get('message'));
});
~~~

////

### Hot Code Reload

////

////

////

~~~js
❯ Session.set('pageTitle', 'A brand new title');
❯ Session.get('pageTitle');
'A brand new title'
~~~
<%= caption "Browser console" %>

////

~~~js
❯ Session.get('pageTitle');
'A brand new title'
~~~
<%= caption "Browser console" %>

////

////

////

~~~js
❯ Session.get('pageTitle');
null
~~~
<%= caption "Browser console" %>

////

////

1. ////
2. ////

////

